noop: |
  ==73== Memcheck, a memory error detec
  ==73== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
  ==73== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
  ==73== Command: noop
  ==73== Parent PID: 14
  ==73== 
  ==73== 
  ==73== HEAP SUMMARY:
  ==73==     in use at exit: 0 bytes in 0 blocks
  ==73==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
  ==73== 
  ==73== All heap blocks were freed -- no leaks are possible
  ==73== 
  ==73== For lists of detected and suppressed errors, rerun with: -s
  ==73== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

segfault:
  pre: |
    ==186== Memcheck, a memory error detector
    ==186== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
    ==186== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
    ==186== Command: segfault
    ==186== Parent PID: 14
    ==186== 
    ==186== Invalid read of size 4
    ==186==    at 0x10913D: main (in /root/genos_tests/segfault)
    ==186==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
    ==186== 
    ==186== 
    ==186== Process terminating with default action of signal 11 (SIGSEGV)
    ==186==  Access not within mapped region at address 0x0
    ==186==    at 0x10913D: main (in /root/genos_tests/segfault)
    ==186==  If you believe this happened as a result of a stack
    ==186==  overflow in your program's main thread (unlikely but
    ==186==  possible), you can try to increase the size of the
    ==186==  main thread stack using the --main-stacksize= flag.
    ==186==  The main thread stack size used in this run was 8388608.
    ==186== 
    ==186== HEAP SUMMARY:
    ==186==     in use at exit: 0 bytes in 0 blocks
    ==186==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
    ==186== 
    ==186== All heap blocks were freed -- no leaks are possible
    ==186== 
    ==186== For lists of detected and suppressed errors, rerun with: -s
    ==186== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

  post: |
    ==186== Memcheck, a memory error detector
    ==186== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
    ==186== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
    ==186== Command: segfault
    ==186== Parent PID: 14
    ==186== 
    ==186== Invalid read of size 4
    ==186==    at 0x10913D: main (in segfault)
    ==186==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
    ==186== 
    ==186== 
    ==186== Process terminating with default action of signal 11 (SIGSEGV)
    ==186==  Access not within mapped region at address 0x0
    ==186==    at 0x10913D: main (in segfault)
    ==186==  If you believe this happened as a result of a stack
    ==186==  overflow in your program's main thread (unlikely but
    ==186==  possible), you can try to increase the size of the
    ==186==  main thread stack using the --main-stacksize= flag.
    ==186==  The main thread stack size used in this run was 8388608.
    ==186== 
    ==186== HEAP SUMMARY:
    ==186==     in use at exit: 0 bytes in 0 blocks
    ==186==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
    ==186== 
    ==186== All heap blocks were freed -- no leaks are possible
    ==186== 
    ==186== For lists of detected and suppressed errors, rerun with: -s
    ==186== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

agony:
  debug:
    pre: |
      ==387== Memcheck, a memory error detector
      ==387== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
      ==387== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
      ==387== Command: many/layers/of/agony
      ==387== Parent PID: 14
      ==387== 
      ==387== Invalid read of size 4
      ==387==    at 0x1091DC: invalid_read (agony.c:9)
      ==387==    by 0x109338: main (agony.c:50)
      ==387==  Address 0x4a45044 is 3 bytes after a block of size 1 alloc'd
      ==387==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1091D3: invalid_read (agony.c:8)
      ==387==    by 0x109338: main (agony.c:50)
      ==387== 
      ==387== Invalid write of size 4
      ==387==    at 0x109227: invalid_write (agony.c:15)
      ==387==    by 0x109342: main (agony.c:51)
      ==387==  Address 0x4a45094 is 3 bytes after a block of size 1 alloc'd
      ==387==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x10921A: invalid_write (agony.c:14)
      ==387==    by 0x109342: main (agony.c:51)
      ==387== 
      ==387== Invalid write of size 4
      ==387==    at 0x10923D: invalid_write (agony.c:17)
      ==387==    by 0x109342: main (agony.c:51)
      ==387==  Address 0x4a45090 is 0 bytes inside a block of size 1 free'd
      ==387==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x109238: invalid_write (agony.c:16)
      ==387==    by 0x109342: main (agony.c:51)
      ==387==  Block was alloc'd at
      ==387==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x10921A: invalid_write (agony.c:14)
      ==387==    by 0x109342: main (agony.c:51)
      ==387== 
      ==387== Conditional jump or move depends on uninitialised value(s)
      ==387==    at 0x109256: uninitialized (agony.c:22)
      ==387==    by 0x10934C: main (agony.c:52)
      ==387== 
      ==387== Invalid free() / delete / delete[] / realloc()
      ==387==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1092B6: double_free (agony.c:35)
      ==387==    by 0x109363: main (agony.c:54)
      ==387==  Address 0x4a45510 is 0 bytes inside a block of size 1,000 free'd
      ==387==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1092AA: double_free (agony.c:34)
      ==387==    by 0x109363: main (agony.c:54)
      ==387==  Block was alloc'd at
      ==387==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x10929A: double_free (agony.c:33)
      ==387==    by 0x109363: main (agony.c:54)
      ==387== 
      ==387== Invalid write of size 4
      ==387==    at 0x1092E4: use_after_free (agony.c:41)
      ==387==    by 0x10936D: main (agony.c:55)
      ==387==  Address 0x4a45940 is 0 bytes inside a block of size 1,000 free'd
      ==387==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1092DF: use_after_free (agony.c:40)
      ==387==    by 0x10936D: main (agony.c:55)
      ==387==  Block was alloc'd at
      ==387==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1092CF: use_after_free (agony.c:39)
      ==387==    by 0x10936D: main (agony.c:55)
      ==387== 
      ==387== Invalid read of size 4
      ==387==    at 0x109380: main (agony.c:57)
      ==387==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
      ==387== 
      ==387== 
      ==387== Process terminating with default action of signal 11 (SIGSEGV)
      ==387==  Access not within mapped region at address 0x0
      ==387==    at 0x109380: main (agony.c:57)
      ==387==  If you believe this happened as a result of a stack
      ==387==  overflow in your program's main thread (unlikely but
      ==387==  possible), you can try to increase the size of the
      ==387==  main thread stack using the --main-stacksize= flag.
      ==387==  The main thread stack size used in this run was 8388608.
      ==387== 
      ==387== HEAP SUMMARY:
      ==387==     in use at exit: 1,000 bytes in 1 blocks
      ==387==   total heap usage: 5 allocs, 5 frees, 3,002 bytes allocated
      ==387== 
      ==387== LEAK SUMMARY:
      ==387==    definitely lost: 1,000 bytes in 1 blocks
      ==387==    indirectly lost: 0 bytes in 0 blocks
      ==387==      possibly lost: 0 bytes in 0 blocks
      ==387==    still reachable: 0 bytes in 0 blocks
      ==387==         suppressed: 0 bytes in 0 blocks
      ==387== Rerun with --leak-check=full to see details of leaked memory
      ==387== 
      ==387== Use --track-origins=yes to see where uninitialised values come from
      ==387== For lists of detected and suppressed errors, rerun with: -s
      ==387== ERROR SUMMARY: 7 errors from 7 contexts (suppressed: 0 from 0)

    post: |
      ==387== Memcheck, a memory error detector
      ==387== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
      ==387== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
      ==387== Command: many/layers/of/agony
      ==387== Parent PID: 14
      ==387== 
      ==387== Invalid read of size 4
      ==387==    at 0x1091DC: invalid_read (agony.c:9)
      ==387==    by 0x109338: main (agony.c:50)
      ==387==  Address 0x4a45044 is 3 bytes after a block of size 1 alloc'd
      ==387==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1091D3: invalid_read (agony.c:8)
      ==387==    by 0x109338: main (agony.c:50)
      ==387== 
      ==387== Invalid write of size 4
      ==387==    at 0x109227: invalid_write (agony.c:15)
      ==387==    by 0x109342: main (agony.c:51)
      ==387==  Address 0x4a45094 is 3 bytes after a block of size 1 alloc'd
      ==387==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x10921A: invalid_write (agony.c:14)
      ==387==    by 0x109342: main (agony.c:51)
      ==387== 
      ==387== Invalid write of size 4
      ==387==    at 0x10923D: invalid_write (agony.c:17)
      ==387==    by 0x109342: main (agony.c:51)
      ==387==  Address 0x4a45090 is 0 bytes inside a block of size 1 free'd
      ==387==    at 0x483CA3F: free (in vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x109238: invalid_write (agony.c:16)
      ==387==    by 0x109342: main (agony.c:51)
      ==387==  Block was alloc'd at
      ==387==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x10921A: invalid_write (agony.c:14)
      ==387==    by 0x109342: main (agony.c:51)
      ==387== 
      ==387== Conditional jump or move depends on uninitialised value(s)
      ==387==    at 0x109256: uninitialized (agony.c:22)
      ==387==    by 0x10934C: main (agony.c:52)
      ==387== 
      ==387== Invalid free() / delete / delete[] / realloc()
      ==387==    at 0x483CA3F: free (in vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1092B6: double_free (agony.c:35)
      ==387==    by 0x109363: main (agony.c:54)
      ==387==  Address 0x4a45510 is 0 bytes inside a block of size 1,000 free'd
      ==387==    at 0x483CA3F: free (in vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1092AA: double_free (agony.c:34)
      ==387==    by 0x109363: main (agony.c:54)
      ==387==  Block was alloc'd at
      ==387==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x10929A: double_free (agony.c:33)
      ==387==    by 0x109363: main (agony.c:54)
      ==387== 
      ==387== Invalid write of size 4
      ==387==    at 0x1092E4: use_after_free (agony.c:41)
      ==387==    by 0x10936D: main (agony.c:55)
      ==387==  Address 0x4a45940 is 0 bytes inside a block of size 1,000 free'd
      ==387==    at 0x483CA3F: free (in vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1092DF: use_after_free (agony.c:40)
      ==387==    by 0x10936D: main (agony.c:55)
      ==387==  Block was alloc'd at
      ==387==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==387==    by 0x1092CF: use_after_free (agony.c:39)
      ==387==    by 0x10936D: main (agony.c:55)
      ==387== 
      ==387== Invalid read of size 4
      ==387==    at 0x109380: main (agony.c:57)
      ==387==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
      ==387== 
      ==387== 
      ==387== Process terminating with default action of signal 11 (SIGSEGV)
      ==387==  Access not within mapped region at address 0x0
      ==387==    at 0x109380: main (agony.c:57)
      ==387==  If you believe this happened as a result of a stack
      ==387==  overflow in your program's main thread (unlikely but
      ==387==  possible), you can try to increase the size of the
      ==387==  main thread stack using the --main-stacksize= flag.
      ==387==  The main thread stack size used in this run was 8388608.
      ==387== 
      ==387== HEAP SUMMARY:
      ==387==     in use at exit: 1,000 bytes in 1 blocks
      ==387==   total heap usage: 5 allocs, 5 frees, 3,002 bytes allocated
      ==387== 
      ==387== LEAK SUMMARY:
      ==387==    definitely lost: 1,000 bytes in 1 blocks
      ==387==    indirectly lost: 0 bytes in 0 blocks
      ==387==      possibly lost: 0 bytes in 0 blocks
      ==387==    still reachable: 0 bytes in 0 blocks
      ==387==         suppressed: 0 bytes in 0 blocks
      ==387== Rerun with --leak-check=full to see details of leaked memory
      ==387== 
      ==387== Use --track-origins=yes to see where uninitialised values come from
      ==387== For lists of detected and suppressed errors, rerun with: -s
      ==387== ERROR SUMMARY: 7 errors from 7 contexts (suppressed: 0 from 0)

  release:
    pre: |
      ==405== Memcheck, a memory error detector
      ==405== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
      ==405== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
      ==405== Command: many/layers/of/agony
      ==405== Parent PID: 14
      ==405== 
      ==405== Invalid read of size 4
      ==405==    at 0x1091DC: invalid_read (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109338: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  Address 0x4a45044 is 3 bytes after a block of size 1 alloc'd
      ==405==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1091D3: invalid_read (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109338: main (in /root/genos_tests/many/layers/of/agony)
      ==405== 
      ==405== Invalid write of size 4
      ==405==    at 0x109227: invalid_write (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109342: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  Address 0x4a45094 is 3 bytes after a block of size 1 alloc'd
      ==405==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x10921A: invalid_write (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109342: main (in /root/genos_tests/many/layers/of/agony)
      ==405== 
      ==405== Invalid write of size 4
      ==405==    at 0x10923D: invalid_write (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109342: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  Address 0x4a45090 is 0 bytes inside a block of size 1 free'd
      ==405==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x109238: invalid_write (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109342: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  Block was alloc'd at
      ==405==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x10921A: invalid_write (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109342: main (in /root/genos_tests/many/layers/of/agony)
      ==405== 
      ==405== Conditional jump or move depends on uninitialised value(s)
      ==405==    at 0x109256: uninitialized (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x10934C: main (in /root/genos_tests/many/layers/of/agony)
      ==405== 
      ==405== Invalid free() / delete / delete[] / realloc()
      ==405==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1092B6: double_free (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109363: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  Address 0x4a45510 is 0 bytes inside a block of size 1,000 free'd
      ==405==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1092AA: double_free (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109363: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  Block was alloc'd at
      ==405==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x10929A: double_free (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x109363: main (in /root/genos_tests/many/layers/of/agony)
      ==405== 
      ==405== Invalid write of size 4
      ==405==    at 0x1092E4: use_after_free (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x10936D: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  Address 0x4a45940 is 0 bytes inside a block of size 1,000 free'd
      ==405==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1092DF: use_after_free (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x10936D: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  Block was alloc'd at
      ==405==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1092CF: use_after_free (in /root/genos_tests/many/layers/of/agony)
      ==405==    by 0x10936D: main (in /root/genos_tests/many/layers/of/agony)
      ==405== 
      ==405== Invalid read of size 4
      ==405==    at 0x109380: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
      ==405== 
      ==405== 
      ==405== Process terminating with default action of signal 11 (SIGSEGV)
      ==405==  Access not within mapped region at address 0x0
      ==405==    at 0x109380: main (in /root/genos_tests/many/layers/of/agony)
      ==405==  If you believe this happened as a result of a stack
      ==405==  overflow in your program's main thread (unlikely but
      ==405==  possible), you can try to increase the size of the
      ==405==  main thread stack using the --main-stacksize= flag.
      ==405==  The main thread stack size used in this run was 8388608.
      ==405== 
      ==405== HEAP SUMMARY:
      ==405==     in use at exit: 1,000 bytes in 1 blocks
      ==405==   total heap usage: 5 allocs, 5 frees, 3,002 bytes allocated
      ==405== 
      ==405== LEAK SUMMARY:
      ==405==    definitely lost: 1,000 bytes in 1 blocks
      ==405==    indirectly lost: 0 bytes in 0 blocks
      ==405==      possibly lost: 0 bytes in 0 blocks
      ==405==    still reachable: 0 bytes in 0 blocks
      ==405==         suppressed: 0 bytes in 0 blocks
      ==405== Rerun with --leak-check=full to see details of leaked memory
      ==405== 
      ==405== Use --track-origins=yes to see where uninitialised values come from
      ==405== For lists of detected and suppressed errors, rerun with: -s
      ==405== ERROR SUMMARY: 7 errors from 7 contexts (suppressed: 0 from 0)

    post: |
      ==405== Memcheck, a memory error detector
      ==405== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
      ==405== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
      ==405== Command: many/layers/of/agony
      ==405== Parent PID: 14
      ==405== 
      ==405== Invalid read of size 4
      ==405==    at 0x1091DC: invalid_read (in agony)
      ==405==    by 0x109338: main (in agony)
      ==405==  Address 0x4a45044 is 3 bytes after a block of size 1 alloc'd
      ==405==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1091D3: invalid_read (in agony)
      ==405==    by 0x109338: main (in agony)
      ==405== 
      ==405== Invalid write of size 4
      ==405==    at 0x109227: invalid_write (in agony)
      ==405==    by 0x109342: main (in agony)
      ==405==  Address 0x4a45094 is 3 bytes after a block of size 1 alloc'd
      ==405==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x10921A: invalid_write (in agony)
      ==405==    by 0x109342: main (in agony)
      ==405== 
      ==405== Invalid write of size 4
      ==405==    at 0x10923D: invalid_write (in agony)
      ==405==    by 0x109342: main (in agony)
      ==405==  Address 0x4a45090 is 0 bytes inside a block of size 1 free'd
      ==405==    at 0x483CA3F: free (in vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x109238: invalid_write (in agony)
      ==405==    by 0x109342: main (in agony)
      ==405==  Block was alloc'd at
      ==405==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x10921A: invalid_write (in agony)
      ==405==    by 0x109342: main (in agony)
      ==405== 
      ==405== Conditional jump or move depends on uninitialised value(s)
      ==405==    at 0x109256: uninitialized (in agony)
      ==405==    by 0x10934C: main (in agony)
      ==405== 
      ==405== Invalid free() / delete / delete[] / realloc()
      ==405==    at 0x483CA3F: free (in vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1092B6: double_free (in agony)
      ==405==    by 0x109363: main (in agony)
      ==405==  Address 0x4a45510 is 0 bytes inside a block of size 1,000 free'd
      ==405==    at 0x483CA3F: free (in vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1092AA: double_free (in agony)
      ==405==    by 0x109363: main (in agony)
      ==405==  Block was alloc'd at
      ==405==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x10929A: double_free (in agony)
      ==405==    by 0x109363: main (in agony)
      ==405== 
      ==405== Invalid write of size 4
      ==405==    at 0x1092E4: use_after_free (in agony)
      ==405==    by 0x10936D: main (in agony)
      ==405==  Address 0x4a45940 is 0 bytes inside a block of size 1,000 free'd
      ==405==    at 0x483CA3F: free (in vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1092DF: use_after_free (in agony)
      ==405==    by 0x10936D: main (in agony)
      ==405==  Block was alloc'd at
      ==405==    at 0x483B7F3: malloc (in vgpreload_memcheck-amd64-linux.so)
      ==405==    by 0x1092CF: use_after_free (in agony)
      ==405==    by 0x10936D: main (in agony)
      ==405== 
      ==405== Invalid read of size 4
      ==405==    at 0x109380: main (in agony)
      ==405==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
      ==405== 
      ==405== 
      ==405== Process terminating with default action of signal 11 (SIGSEGV)
      ==405==  Access not within mapped region at address 0x0
      ==405==    at 0x109380: main (in agony)
      ==405==  If you believe this happened as a result of a stack
      ==405==  overflow in your program's main thread (unlikely but
      ==405==  possible), you can try to increase the size of the
      ==405==  main thread stack using the --main-stacksize= flag.
      ==405==  The main thread stack size used in this run was 8388608.
      ==405== 
      ==405== HEAP SUMMARY:
      ==405==     in use at exit: 1,000 bytes in 1 blocks
      ==405==   total heap usage: 5 allocs, 5 frees, 3,002 bytes allocated
      ==405== 
      ==405== LEAK SUMMARY:
      ==405==    definitely lost: 1,000 bytes in 1 blocks
      ==405==    indirectly lost: 0 bytes in 0 blocks
      ==405==      possibly lost: 0 bytes in 0 blocks
      ==405==    still reachable: 0 bytes in 0 blocks
      ==405==         suppressed: 0 bytes in 0 blocks
      ==405== Rerun with --leak-check=full to see details of leaked memory
      ==405== 
      ==405== Use --track-origins=yes to see where uninitialised values come from
      ==405== For lists of detected and suppressed errors, rerun with: -s
      ==405== ERROR SUMMARY: 7 errors from 7 contexts (suppressed: 0 from 0)
